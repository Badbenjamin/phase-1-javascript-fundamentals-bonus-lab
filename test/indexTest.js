require ( './helpers.js' );

const chai = require('chai')
const expect = chai.expect;

const fs = require('fs')
const path = require('path')

const js = fs.readFileSync(path.resolve(__dirname, '..', 'index.js'), 'utf-8')

describe('index.js', function() {
  describe('username', function() {
    it('is defined using let', function () {
      expect(js).to.match(/let username/, "Expected username to be defined using let");
    });

    it('is a string', function () {
      expect(typeof username).to.equal('string');
    });

    it("is declared as equal to 'alice123'", function () {
      expect(username).to.equal('alice123');
    });
  });

  describe('password', function() {
    it('is defined using let', function () {
      expect(js).to.match(/let password/, "Expected password to be defined using let");
    });

    it('is a string', function () {
      expect(typeof password).to.equal('string');
    });

    it("is declared as equal to 'flatironschool'", function () {
      expect(password).to.equal('flatironschool');
    });
  });

  describe('loginValidationPhrase', function() {
    it("is defined using const", function() {
      expect(js).to.match(/const loginValidationPhrase/, "Expected loginValidationPhrase to be defined using const");
    });

    it("is a string", function() {
      expect(typeof loginValidationPhrase).to.equal('string');
    });

    it("is declared as equal to 'Welcome alice123', if the username and password are correct, otherwise 'Invalid username or password! Please try again!'", function() {
      if(username === "alice123" && password == "flatironschool"){
        expect(loginValidationPhrase).to.equal('Welcome alice123!');
      }
      else{
        expect(loginValidationPhrase).to.equal('Invalid username or password! Please try again!');
      }
    });
  });

  describe('randomNumber', function() {
    it("is defined using const", function() {
      expect(js).to.match(/const randomNumber/, "Expected randomNumber to be defined using const");
    });

    it("is a number", function() {
      expect(typeof randomNumber).to.equal('number');
    });

    it("is a random number generated by Math.random()", function() {
      expect(js).to.match(/Math.random()/, "Expected randomNumber to be a random number generated by Math.random()");
    });
  });

  describe('luckyNumberPhrase', function() {
    it("is defined using const", function() {
      expect(js).to.match(/const luckyNumberPhrase/, "Expected luckyNumberPhrase to be defined using const");
    });

    it("is a string", function() {
      expect(typeof luckyNumberPhrase).to.equal('string');
    });

    it("contains 'Your lucky number is' as part of the phrase", function() {
      expect(luckyNumberPhrase.includes('Your lucky number is ')).to.equal(true);
    });

    it("contains randomNumber as part of the phrase", function() {
      expect(luckyNumberPhrase.includes(randomNumber)).to.equal(true);
    });
  });
});
